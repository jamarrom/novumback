
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 5.0.0
 * Query Engine version: 6b0aef69b7cdfc787f822ecd7cdc76d5f1991584
 */
Prisma.prismaVersion = {
  client: "5.0.0",
  engine: "6b0aef69b7cdfc787f822ecd7cdc76d5f1991584"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Cajas_bancosScalarFieldEnum = {
  cajas_bancos_id: 'cajas_bancos_id',
  nombre_cuenta: 'nombre_cuenta',
  tipo_pago_id: 'tipo_pago_id',
  cantidad_actual: 'cantidad_actual',
  user_id: 'user_id',
  activo: 'activo'
};

exports.Prisma.CategoriasScalarFieldEnum = {
  categoria_id: 'categoria_id',
  categoria: 'categoria'
};

exports.Prisma.ClientesScalarFieldEnum = {
  cliente_id: 'cliente_id',
  nombre: 'nombre',
  apellido: 'apellido',
  puesto: 'puesto',
  celular: 'celular',
  empresa: 'empresa',
  dedica_empresa: 'dedica_empresa',
  num_empleados: 'num_empleados',
  fecha: 'fecha',
  user_id: 'user_id',
  activo: 'activo'
};

exports.Prisma.Egresos_futurosScalarFieldEnum = {
  egresos_futuros_id: 'egresos_futuros_id',
  nombre_persona_empresa: 'nombre_persona_empresa',
  concepto: 'concepto',
  tipo_pago_id: 'tipo_pago_id',
  categoria_id: 'categoria_id',
  monto: 'monto',
  fecha_tentativa_pago: 'fecha_tentativa_pago',
  user_id: 'user_id',
  activo: 'activo'
};

exports.Prisma.Ingresos_futurosScalarFieldEnum = {
  ingresos_futuros_id: 'ingresos_futuros_id',
  nombre_persona_empresa: 'nombre_persona_empresa',
  concepto: 'concepto',
  tipo_pago_id: 'tipo_pago_id',
  categoria_id: 'categoria_id',
  monto: 'monto',
  fecha_tentativa_cobro: 'fecha_tentativa_cobro',
  user_id: 'user_id',
  activo: 'activo'
};

exports.Prisma.Tipos_pagosScalarFieldEnum = {
  tipo_pago_id: 'tipo_pago_id',
  tipo_pago: 'tipo_pago'
};

exports.Prisma.TypesusersScalarFieldEnum = {
  typeuser_id: 'typeuser_id',
  typeuser: 'typeuser'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  email: 'email',
  password: 'password',
  typeuser_id: 'typeuser_id',
  activo: 'activo'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  cajas_bancos: 'cajas_bancos',
  categorias: 'categorias',
  clientes: 'clientes',
  egresos_futuros: 'egresos_futuros',
  ingresos_futuros: 'ingresos_futuros',
  tipos_pagos: 'tipos_pagos',
  typesusers: 'typesusers',
  users: 'users'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
